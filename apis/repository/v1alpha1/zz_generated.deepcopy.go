//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedSecurityInitParameters) DeepCopyInto(out *AdvancedSecurityInitParameters) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedSecurityInitParameters.
func (in *AdvancedSecurityInitParameters) DeepCopy() *AdvancedSecurityInitParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedSecurityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedSecurityObservation) DeepCopyInto(out *AdvancedSecurityObservation) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedSecurityObservation.
func (in *AdvancedSecurityObservation) DeepCopy() *AdvancedSecurityObservation {
	if in == nil {
		return nil
	}
	out := new(AdvancedSecurityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedSecurityParameters) DeepCopyInto(out *AdvancedSecurityParameters) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedSecurityParameters.
func (in *AdvancedSecurityParameters) DeepCopy() *AdvancedSecurityParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedSecurityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PagesInitParameters) DeepCopyInto(out *PagesInitParameters) {
	*out = *in
	if in.BuildType != nil {
		in, out := &in.BuildType, &out.BuildType
		*out = new(string)
		**out = **in
	}
	if in.Cname != nil {
		in, out := &in.Cname, &out.Cname
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = make([]SourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PagesInitParameters.
func (in *PagesInitParameters) DeepCopy() *PagesInitParameters {
	if in == nil {
		return nil
	}
	out := new(PagesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PagesObservation) DeepCopyInto(out *PagesObservation) {
	*out = *in
	if in.BuildType != nil {
		in, out := &in.BuildType, &out.BuildType
		*out = new(string)
		**out = **in
	}
	if in.Cname != nil {
		in, out := &in.Cname, &out.Cname
		*out = new(string)
		**out = **in
	}
	if in.Custom404 != nil {
		in, out := &in.Custom404, &out.Custom404
		*out = new(bool)
		**out = **in
	}
	if in.HTMLURL != nil {
		in, out := &in.HTMLURL, &out.HTMLURL
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = make([]SourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PagesObservation.
func (in *PagesObservation) DeepCopy() *PagesObservation {
	if in == nil {
		return nil
	}
	out := new(PagesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PagesParameters) DeepCopyInto(out *PagesParameters) {
	*out = *in
	if in.BuildType != nil {
		in, out := &in.BuildType, &out.BuildType
		*out = new(string)
		**out = **in
	}
	if in.Cname != nil {
		in, out := &in.Cname, &out.Cname
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = make([]SourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PagesParameters.
func (in *PagesParameters) DeepCopy() *PagesParameters {
	if in == nil {
		return nil
	}
	out := new(PagesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Repository) DeepCopyInto(out *Repository) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Repository.
func (in *Repository) DeepCopy() *Repository {
	if in == nil {
		return nil
	}
	out := new(Repository)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Repository) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryInitParameters) DeepCopyInto(out *RepositoryInitParameters) {
	*out = *in
	if in.AllowAutoMerge != nil {
		in, out := &in.AllowAutoMerge, &out.AllowAutoMerge
		*out = new(bool)
		**out = **in
	}
	if in.AllowMergeCommit != nil {
		in, out := &in.AllowMergeCommit, &out.AllowMergeCommit
		*out = new(bool)
		**out = **in
	}
	if in.AllowRebaseMerge != nil {
		in, out := &in.AllowRebaseMerge, &out.AllowRebaseMerge
		*out = new(bool)
		**out = **in
	}
	if in.AllowSquashMerge != nil {
		in, out := &in.AllowSquashMerge, &out.AllowSquashMerge
		*out = new(bool)
		**out = **in
	}
	if in.AllowUpdateBranch != nil {
		in, out := &in.AllowUpdateBranch, &out.AllowUpdateBranch
		*out = new(bool)
		**out = **in
	}
	if in.ArchiveOnDestroy != nil {
		in, out := &in.ArchiveOnDestroy, &out.ArchiveOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Archived != nil {
		in, out := &in.Archived, &out.Archived
		*out = new(bool)
		**out = **in
	}
	if in.AutoInit != nil {
		in, out := &in.AutoInit, &out.AutoInit
		*out = new(bool)
		**out = **in
	}
	if in.DefaultBranch != nil {
		in, out := &in.DefaultBranch, &out.DefaultBranch
		*out = new(string)
		**out = **in
	}
	if in.DeleteBranchOnMerge != nil {
		in, out := &in.DeleteBranchOnMerge, &out.DeleteBranchOnMerge
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GitignoreTemplate != nil {
		in, out := &in.GitignoreTemplate, &out.GitignoreTemplate
		*out = new(string)
		**out = **in
	}
	if in.HasDiscussions != nil {
		in, out := &in.HasDiscussions, &out.HasDiscussions
		*out = new(bool)
		**out = **in
	}
	if in.HasDownloads != nil {
		in, out := &in.HasDownloads, &out.HasDownloads
		*out = new(bool)
		**out = **in
	}
	if in.HasIssues != nil {
		in, out := &in.HasIssues, &out.HasIssues
		*out = new(bool)
		**out = **in
	}
	if in.HasProjects != nil {
		in, out := &in.HasProjects, &out.HasProjects
		*out = new(bool)
		**out = **in
	}
	if in.HasWiki != nil {
		in, out := &in.HasWiki, &out.HasWiki
		*out = new(bool)
		**out = **in
	}
	if in.HomepageURL != nil {
		in, out := &in.HomepageURL, &out.HomepageURL
		*out = new(string)
		**out = **in
	}
	if in.IgnoreVulnerabilityAlertsDuringRead != nil {
		in, out := &in.IgnoreVulnerabilityAlertsDuringRead, &out.IgnoreVulnerabilityAlertsDuringRead
		*out = new(bool)
		**out = **in
	}
	if in.IsTemplate != nil {
		in, out := &in.IsTemplate, &out.IsTemplate
		*out = new(bool)
		**out = **in
	}
	if in.LicenseTemplate != nil {
		in, out := &in.LicenseTemplate, &out.LicenseTemplate
		*out = new(string)
		**out = **in
	}
	if in.MergeCommitMessage != nil {
		in, out := &in.MergeCommitMessage, &out.MergeCommitMessage
		*out = new(string)
		**out = **in
	}
	if in.MergeCommitTitle != nil {
		in, out := &in.MergeCommitTitle, &out.MergeCommitTitle
		*out = new(string)
		**out = **in
	}
	if in.Pages != nil {
		in, out := &in.Pages, &out.Pages
		*out = make([]PagesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Private != nil {
		in, out := &in.Private, &out.Private
		*out = new(bool)
		**out = **in
	}
	if in.SecurityAndAnalysis != nil {
		in, out := &in.SecurityAndAnalysis, &out.SecurityAndAnalysis
		*out = make([]SecurityAndAnalysisInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SquashMergeCommitMessage != nil {
		in, out := &in.SquashMergeCommitMessage, &out.SquashMergeCommitMessage
		*out = new(string)
		**out = **in
	}
	if in.SquashMergeCommitTitle != nil {
		in, out := &in.SquashMergeCommitTitle, &out.SquashMergeCommitTitle
		*out = new(string)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = make([]TemplateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Topics != nil {
		in, out := &in.Topics, &out.Topics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(string)
		**out = **in
	}
	if in.VulnerabilityAlerts != nil {
		in, out := &in.VulnerabilityAlerts, &out.VulnerabilityAlerts
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryInitParameters.
func (in *RepositoryInitParameters) DeepCopy() *RepositoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryList) DeepCopyInto(out *RepositoryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Repository, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryList.
func (in *RepositoryList) DeepCopy() *RepositoryList {
	if in == nil {
		return nil
	}
	out := new(RepositoryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RepositoryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryObservation) DeepCopyInto(out *RepositoryObservation) {
	*out = *in
	if in.AllowAutoMerge != nil {
		in, out := &in.AllowAutoMerge, &out.AllowAutoMerge
		*out = new(bool)
		**out = **in
	}
	if in.AllowMergeCommit != nil {
		in, out := &in.AllowMergeCommit, &out.AllowMergeCommit
		*out = new(bool)
		**out = **in
	}
	if in.AllowRebaseMerge != nil {
		in, out := &in.AllowRebaseMerge, &out.AllowRebaseMerge
		*out = new(bool)
		**out = **in
	}
	if in.AllowSquashMerge != nil {
		in, out := &in.AllowSquashMerge, &out.AllowSquashMerge
		*out = new(bool)
		**out = **in
	}
	if in.AllowUpdateBranch != nil {
		in, out := &in.AllowUpdateBranch, &out.AllowUpdateBranch
		*out = new(bool)
		**out = **in
	}
	if in.ArchiveOnDestroy != nil {
		in, out := &in.ArchiveOnDestroy, &out.ArchiveOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Archived != nil {
		in, out := &in.Archived, &out.Archived
		*out = new(bool)
		**out = **in
	}
	if in.AutoInit != nil {
		in, out := &in.AutoInit, &out.AutoInit
		*out = new(bool)
		**out = **in
	}
	if in.DefaultBranch != nil {
		in, out := &in.DefaultBranch, &out.DefaultBranch
		*out = new(string)
		**out = **in
	}
	if in.DeleteBranchOnMerge != nil {
		in, out := &in.DeleteBranchOnMerge, &out.DeleteBranchOnMerge
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.FullName != nil {
		in, out := &in.FullName, &out.FullName
		*out = new(string)
		**out = **in
	}
	if in.GitCloneURL != nil {
		in, out := &in.GitCloneURL, &out.GitCloneURL
		*out = new(string)
		**out = **in
	}
	if in.GitignoreTemplate != nil {
		in, out := &in.GitignoreTemplate, &out.GitignoreTemplate
		*out = new(string)
		**out = **in
	}
	if in.HTMLURL != nil {
		in, out := &in.HTMLURL, &out.HTMLURL
		*out = new(string)
		**out = **in
	}
	if in.HTTPCloneURL != nil {
		in, out := &in.HTTPCloneURL, &out.HTTPCloneURL
		*out = new(string)
		**out = **in
	}
	if in.HasDiscussions != nil {
		in, out := &in.HasDiscussions, &out.HasDiscussions
		*out = new(bool)
		**out = **in
	}
	if in.HasDownloads != nil {
		in, out := &in.HasDownloads, &out.HasDownloads
		*out = new(bool)
		**out = **in
	}
	if in.HasIssues != nil {
		in, out := &in.HasIssues, &out.HasIssues
		*out = new(bool)
		**out = **in
	}
	if in.HasProjects != nil {
		in, out := &in.HasProjects, &out.HasProjects
		*out = new(bool)
		**out = **in
	}
	if in.HasWiki != nil {
		in, out := &in.HasWiki, &out.HasWiki
		*out = new(bool)
		**out = **in
	}
	if in.HomepageURL != nil {
		in, out := &in.HomepageURL, &out.HomepageURL
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IgnoreVulnerabilityAlertsDuringRead != nil {
		in, out := &in.IgnoreVulnerabilityAlertsDuringRead, &out.IgnoreVulnerabilityAlertsDuringRead
		*out = new(bool)
		**out = **in
	}
	if in.IsTemplate != nil {
		in, out := &in.IsTemplate, &out.IsTemplate
		*out = new(bool)
		**out = **in
	}
	if in.LicenseTemplate != nil {
		in, out := &in.LicenseTemplate, &out.LicenseTemplate
		*out = new(string)
		**out = **in
	}
	if in.MergeCommitMessage != nil {
		in, out := &in.MergeCommitMessage, &out.MergeCommitMessage
		*out = new(string)
		**out = **in
	}
	if in.MergeCommitTitle != nil {
		in, out := &in.MergeCommitTitle, &out.MergeCommitTitle
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
	if in.Pages != nil {
		in, out := &in.Pages, &out.Pages
		*out = make([]PagesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Private != nil {
		in, out := &in.Private, &out.Private
		*out = new(bool)
		**out = **in
	}
	if in.RepoID != nil {
		in, out := &in.RepoID, &out.RepoID
		*out = new(float64)
		**out = **in
	}
	if in.SSHCloneURL != nil {
		in, out := &in.SSHCloneURL, &out.SSHCloneURL
		*out = new(string)
		**out = **in
	}
	if in.SecurityAndAnalysis != nil {
		in, out := &in.SecurityAndAnalysis, &out.SecurityAndAnalysis
		*out = make([]SecurityAndAnalysisObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SquashMergeCommitMessage != nil {
		in, out := &in.SquashMergeCommitMessage, &out.SquashMergeCommitMessage
		*out = new(string)
		**out = **in
	}
	if in.SquashMergeCommitTitle != nil {
		in, out := &in.SquashMergeCommitTitle, &out.SquashMergeCommitTitle
		*out = new(string)
		**out = **in
	}
	if in.SvnURL != nil {
		in, out := &in.SvnURL, &out.SvnURL
		*out = new(string)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = make([]TemplateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Topics != nil {
		in, out := &in.Topics, &out.Topics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(string)
		**out = **in
	}
	if in.VulnerabilityAlerts != nil {
		in, out := &in.VulnerabilityAlerts, &out.VulnerabilityAlerts
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryObservation.
func (in *RepositoryObservation) DeepCopy() *RepositoryObservation {
	if in == nil {
		return nil
	}
	out := new(RepositoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryParameters) DeepCopyInto(out *RepositoryParameters) {
	*out = *in
	if in.AllowAutoMerge != nil {
		in, out := &in.AllowAutoMerge, &out.AllowAutoMerge
		*out = new(bool)
		**out = **in
	}
	if in.AllowMergeCommit != nil {
		in, out := &in.AllowMergeCommit, &out.AllowMergeCommit
		*out = new(bool)
		**out = **in
	}
	if in.AllowRebaseMerge != nil {
		in, out := &in.AllowRebaseMerge, &out.AllowRebaseMerge
		*out = new(bool)
		**out = **in
	}
	if in.AllowSquashMerge != nil {
		in, out := &in.AllowSquashMerge, &out.AllowSquashMerge
		*out = new(bool)
		**out = **in
	}
	if in.AllowUpdateBranch != nil {
		in, out := &in.AllowUpdateBranch, &out.AllowUpdateBranch
		*out = new(bool)
		**out = **in
	}
	if in.ArchiveOnDestroy != nil {
		in, out := &in.ArchiveOnDestroy, &out.ArchiveOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Archived != nil {
		in, out := &in.Archived, &out.Archived
		*out = new(bool)
		**out = **in
	}
	if in.AutoInit != nil {
		in, out := &in.AutoInit, &out.AutoInit
		*out = new(bool)
		**out = **in
	}
	if in.DefaultBranch != nil {
		in, out := &in.DefaultBranch, &out.DefaultBranch
		*out = new(string)
		**out = **in
	}
	if in.DeleteBranchOnMerge != nil {
		in, out := &in.DeleteBranchOnMerge, &out.DeleteBranchOnMerge
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GitignoreTemplate != nil {
		in, out := &in.GitignoreTemplate, &out.GitignoreTemplate
		*out = new(string)
		**out = **in
	}
	if in.HasDiscussions != nil {
		in, out := &in.HasDiscussions, &out.HasDiscussions
		*out = new(bool)
		**out = **in
	}
	if in.HasDownloads != nil {
		in, out := &in.HasDownloads, &out.HasDownloads
		*out = new(bool)
		**out = **in
	}
	if in.HasIssues != nil {
		in, out := &in.HasIssues, &out.HasIssues
		*out = new(bool)
		**out = **in
	}
	if in.HasProjects != nil {
		in, out := &in.HasProjects, &out.HasProjects
		*out = new(bool)
		**out = **in
	}
	if in.HasWiki != nil {
		in, out := &in.HasWiki, &out.HasWiki
		*out = new(bool)
		**out = **in
	}
	if in.HomepageURL != nil {
		in, out := &in.HomepageURL, &out.HomepageURL
		*out = new(string)
		**out = **in
	}
	if in.IgnoreVulnerabilityAlertsDuringRead != nil {
		in, out := &in.IgnoreVulnerabilityAlertsDuringRead, &out.IgnoreVulnerabilityAlertsDuringRead
		*out = new(bool)
		**out = **in
	}
	if in.IsTemplate != nil {
		in, out := &in.IsTemplate, &out.IsTemplate
		*out = new(bool)
		**out = **in
	}
	if in.LicenseTemplate != nil {
		in, out := &in.LicenseTemplate, &out.LicenseTemplate
		*out = new(string)
		**out = **in
	}
	if in.MergeCommitMessage != nil {
		in, out := &in.MergeCommitMessage, &out.MergeCommitMessage
		*out = new(string)
		**out = **in
	}
	if in.MergeCommitTitle != nil {
		in, out := &in.MergeCommitTitle, &out.MergeCommitTitle
		*out = new(string)
		**out = **in
	}
	if in.Pages != nil {
		in, out := &in.Pages, &out.Pages
		*out = make([]PagesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Private != nil {
		in, out := &in.Private, &out.Private
		*out = new(bool)
		**out = **in
	}
	if in.SecurityAndAnalysis != nil {
		in, out := &in.SecurityAndAnalysis, &out.SecurityAndAnalysis
		*out = make([]SecurityAndAnalysisParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SquashMergeCommitMessage != nil {
		in, out := &in.SquashMergeCommitMessage, &out.SquashMergeCommitMessage
		*out = new(string)
		**out = **in
	}
	if in.SquashMergeCommitTitle != nil {
		in, out := &in.SquashMergeCommitTitle, &out.SquashMergeCommitTitle
		*out = new(string)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = make([]TemplateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Topics != nil {
		in, out := &in.Topics, &out.Topics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Visibility != nil {
		in, out := &in.Visibility, &out.Visibility
		*out = new(string)
		**out = **in
	}
	if in.VulnerabilityAlerts != nil {
		in, out := &in.VulnerabilityAlerts, &out.VulnerabilityAlerts
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryParameters.
func (in *RepositoryParameters) DeepCopy() *RepositoryParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositorySpec) DeepCopyInto(out *RepositorySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositorySpec.
func (in *RepositorySpec) DeepCopy() *RepositorySpec {
	if in == nil {
		return nil
	}
	out := new(RepositorySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryStatus) DeepCopyInto(out *RepositoryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryStatus.
func (in *RepositoryStatus) DeepCopy() *RepositoryStatus {
	if in == nil {
		return nil
	}
	out := new(RepositoryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScanningInitParameters) DeepCopyInto(out *SecretScanningInitParameters) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScanningInitParameters.
func (in *SecretScanningInitParameters) DeepCopy() *SecretScanningInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecretScanningInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScanningObservation) DeepCopyInto(out *SecretScanningObservation) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScanningObservation.
func (in *SecretScanningObservation) DeepCopy() *SecretScanningObservation {
	if in == nil {
		return nil
	}
	out := new(SecretScanningObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScanningParameters) DeepCopyInto(out *SecretScanningParameters) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScanningParameters.
func (in *SecretScanningParameters) DeepCopy() *SecretScanningParameters {
	if in == nil {
		return nil
	}
	out := new(SecretScanningParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScanningPushProtectionInitParameters) DeepCopyInto(out *SecretScanningPushProtectionInitParameters) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScanningPushProtectionInitParameters.
func (in *SecretScanningPushProtectionInitParameters) DeepCopy() *SecretScanningPushProtectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecretScanningPushProtectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScanningPushProtectionObservation) DeepCopyInto(out *SecretScanningPushProtectionObservation) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScanningPushProtectionObservation.
func (in *SecretScanningPushProtectionObservation) DeepCopy() *SecretScanningPushProtectionObservation {
	if in == nil {
		return nil
	}
	out := new(SecretScanningPushProtectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScanningPushProtectionParameters) DeepCopyInto(out *SecretScanningPushProtectionParameters) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScanningPushProtectionParameters.
func (in *SecretScanningPushProtectionParameters) DeepCopy() *SecretScanningPushProtectionParameters {
	if in == nil {
		return nil
	}
	out := new(SecretScanningPushProtectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityAndAnalysisInitParameters) DeepCopyInto(out *SecurityAndAnalysisInitParameters) {
	*out = *in
	if in.AdvancedSecurity != nil {
		in, out := &in.AdvancedSecurity, &out.AdvancedSecurity
		*out = make([]AdvancedSecurityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecretScanning != nil {
		in, out := &in.SecretScanning, &out.SecretScanning
		*out = make([]SecretScanningInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecretScanningPushProtection != nil {
		in, out := &in.SecretScanningPushProtection, &out.SecretScanningPushProtection
		*out = make([]SecretScanningPushProtectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityAndAnalysisInitParameters.
func (in *SecurityAndAnalysisInitParameters) DeepCopy() *SecurityAndAnalysisInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityAndAnalysisInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityAndAnalysisObservation) DeepCopyInto(out *SecurityAndAnalysisObservation) {
	*out = *in
	if in.AdvancedSecurity != nil {
		in, out := &in.AdvancedSecurity, &out.AdvancedSecurity
		*out = make([]AdvancedSecurityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecretScanning != nil {
		in, out := &in.SecretScanning, &out.SecretScanning
		*out = make([]SecretScanningObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecretScanningPushProtection != nil {
		in, out := &in.SecretScanningPushProtection, &out.SecretScanningPushProtection
		*out = make([]SecretScanningPushProtectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityAndAnalysisObservation.
func (in *SecurityAndAnalysisObservation) DeepCopy() *SecurityAndAnalysisObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityAndAnalysisObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityAndAnalysisParameters) DeepCopyInto(out *SecurityAndAnalysisParameters) {
	*out = *in
	if in.AdvancedSecurity != nil {
		in, out := &in.AdvancedSecurity, &out.AdvancedSecurity
		*out = make([]AdvancedSecurityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecretScanning != nil {
		in, out := &in.SecretScanning, &out.SecretScanning
		*out = make([]SecretScanningParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecretScanningPushProtection != nil {
		in, out := &in.SecretScanningPushProtection, &out.SecretScanningPushProtection
		*out = make([]SecretScanningPushProtectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityAndAnalysisParameters.
func (in *SecurityAndAnalysisParameters) DeepCopy() *SecurityAndAnalysisParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityAndAnalysisParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceInitParameters) DeepCopyInto(out *SourceInitParameters) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceInitParameters.
func (in *SourceInitParameters) DeepCopy() *SourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceObservation) DeepCopyInto(out *SourceObservation) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceObservation.
func (in *SourceObservation) DeepCopy() *SourceObservation {
	if in == nil {
		return nil
	}
	out := new(SourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceParameters) DeepCopyInto(out *SourceParameters) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceParameters.
func (in *SourceParameters) DeepCopy() *SourceParameters {
	if in == nil {
		return nil
	}
	out := new(SourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateInitParameters) DeepCopyInto(out *TemplateInitParameters) {
	*out = *in
	if in.IncludeAllBranches != nil {
		in, out := &in.IncludeAllBranches, &out.IncludeAllBranches
		*out = new(bool)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateInitParameters.
func (in *TemplateInitParameters) DeepCopy() *TemplateInitParameters {
	if in == nil {
		return nil
	}
	out := new(TemplateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateObservation) DeepCopyInto(out *TemplateObservation) {
	*out = *in
	if in.IncludeAllBranches != nil {
		in, out := &in.IncludeAllBranches, &out.IncludeAllBranches
		*out = new(bool)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateObservation.
func (in *TemplateObservation) DeepCopy() *TemplateObservation {
	if in == nil {
		return nil
	}
	out := new(TemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateParameters) DeepCopyInto(out *TemplateParameters) {
	*out = *in
	if in.IncludeAllBranches != nil {
		in, out := &in.IncludeAllBranches, &out.IncludeAllBranches
		*out = new(bool)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateParameters.
func (in *TemplateParameters) DeepCopy() *TemplateParameters {
	if in == nil {
		return nil
	}
	out := new(TemplateParameters)
	in.DeepCopyInto(out)
	return out
}
